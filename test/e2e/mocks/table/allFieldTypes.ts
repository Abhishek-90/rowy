export const allFieldTypesSchema = {
  columns: {
    date: {
      config: {
        format: "yyyy-MM-dd",
      },
      editable: true,
      fieldName: "date",
      index: 18,
      key: "date",
      name: "date",
      type: "DATE",
      width: 159.7620849609375,
    },
    _updatedBy: {
      config: {},
      fieldName: "_updatedBy",
      index: 30,
      key: "_updatedBy",
      name: "updated by",
      type: "USER",
      width: 152.39999389648438,
    },
    color: {
      config: {},
      fieldName: "color",
      index: 8,
      key: "color",
      name: "color",
      type: "COLOR",
      width: 148.914306640625,
    },
    geopoint: {
      config: {},
      fieldName: "geopoint",
      index: 26,
      key: "geopoint",
      name: "Geopoint",
      type: "GEO_POINT",
      width: 236.8359375,
    },
    "_updatedBy.timestamp": {
      config: {},
      fieldName: "_updatedBy.timestamp",
      index: 31,
      key: "_updatedBy.timestamp",
      name: "Updated At",
      type: "UPDATED_AT",
      width: 176,
    },
    json: {
      config: {
        isArray: true,
      },
      fieldName: "json",
      index: 24,
      key: "json",
      name: "json",
      type: "JSON",
    },
    _createdBy: {
      config: {},
      fieldName: "_createdBy",
      index: 28,
      key: "_createdBy",
      name: "Created By",
      type: "CREATED_BY",
    },
    action: {
      config: {
        requiredFields: [],
      },
      fieldName: "action",
      index: 12,
      key: "action",
      name: "Action",
      type: "ACTION",
    },
    code: {
      config: {},
      fieldName: "code",
      index: 25,
      key: "code",
      name: "code",
      type: "CODE",
      width: 481.75,
    },
    dateTime: {
      config: {},
      fieldName: "dateTime",
      index: 19,
      key: "dateTime",
      name: "dateTime",
      type: "DATE_TIME",
      width: 184.99609375,
    },
    duration: {
      config: {},
      fieldName: "duration",
      index: 27,
      key: "duration",
      name: "Duration",
      type: "DURATION",
    },
    email: {
      config: {},
      fieldName: "email",
      fixed: false,
      index: 6,
      key: "email",
      name: "email",
      type: "EMAIL",
      width: 155.19,
    },
    file: {
      config: {},
      editable: true,
      fieldName: "file",
      index: 15,
      key: "file",
      name: "file",
      type: "FILE",
      width: 583.2265625,
    },
    formula: {
      config: {
        formulaFn:
          'const formula:Formula = async ({ row, ref })=> {\n  return [...new Array(30)].reduce((p,_,l) => p+l, "")\n\n  // WRITE YOUR CODE ONLY BELOW THIS LINE. DO NOT WRITE CODE/COMMENTS OUTSIDE THE FUNCTION BODY\n  \n  // Example:\n  // return row.a + row.b;\n  // WRITE YOUR CODE ONLY ABOVE THIS LINE. DO NOT WRITE CODE/COMMENTS OUTSIDE THE FUNCTION BODY\n}\n',
        renderFieldType: "SIMPLE_TEXT",
      },
      fieldName: "formula",
      index: 1,
      key: "formula",
      name: "formula",
      type: "FORMULA",
      width: 386,
    },
    id: {
      config: {},
      fieldName: "id",
      index: 0,
      key: "id",
      name: "ID",
      type: "ID",
      width: 120.1,
    },
    image: {
      config: {},
      editable: true,
      fieldName: "image",
      index: 5,
      key: "image",
      name: "image",
      type: "IMAGE",
      width: 318.88,
    },
    longText: {
      config: {
        defaultValue: {
          script: "const { v4: uuidv4 } = require('uuid');\nreturn uuidv4();",
          type: "undefined",
        },
        maxLength: "",
      },
      editable: true,
      fieldName: "longText",
      index: 9,
      key: "longText",
      name: "longText",
      type: "LONG_TEXT",
      width: 398,
    },
    markdown: {
      config: {},
      fieldName: "markdown",
      index: 22,
      key: "markdown",
      name: "Markdown",
      type: "MARKDOWN",
      width: 250.0859375,
    },
    multiSelect: {
      config: {
        options: [
          "No",
          "Yes",
          "Maybe",
          "Option 1",
          "Option 2",
          "Option 3",
          "Option 4",
          "Option 5",
          "Option 6",
        ],
      },
      fieldName: "multiSelect",
      index: 3,
      key: "multiSelect",
      name: "multi select",
      type: "MULTI_SELECT",
      width: 187.54,
    },
    number: {
      config: {},
      fieldName: "number",
      index: 7,
      key: "number",
      name: "number",
      type: "NUMBER",
      width: 117.4453125,
    },
    percentage: {
      config: {
        colors: [null, "#fff2b3", "#1FAD5F"],
        endColor: {
          hex: "#1FAD5F",
          hsv: {
            a: 1,
            h: 147.04225352112675,
            s: 82.08092485549133,
            v: 67.84313725490196,
          },
          rgb: {
            a: 1,
            b: 95,
            g: 173,
            r: 31,
          },
        },
        midColor: {
          hex: "#ffffff00",
          hsv: {
            h: 0,
            s: 0,
            v: 100,
          },
          rgb: {
            b: 255,
            g: 255,
            r: 255,
          },
        },
        required: false,
        startColor: {
          hex: "#ED4747",
          hsv: {
            a: 1,
            h: 0,
            s: 70.042194092827,
            v: 92.94117647058823,
          },
          rgb: {
            a: 1,
            b: 71,
            g: 71,
            r: 237,
          },
        },
      },
      fieldName: "percentage",
      index: 11,
      key: "percentage",
      name: "percentage",
      type: "PERCENTAGE",
      width: 122.55859375,
    },
    phone: {
      config: {},
      fieldName: "phone",
      index: 23,
      key: "phone",
      name: "phone",
      type: "PHONE_NUMBER",
    },
    rating: {
      config: {
        customIcons: {
          enabled: true,
          rating: "❤️",
        },
        defaultValue: {
          script: "return Math.ceil(Math.random()*5)",
          type: "undefined",
        },
        max: 5,
        precision: 0.5,
      },
      fieldName: "rating",
      fixed: false,
      index: 10,
      key: "rating",
      name: "rating",
      type: "RATING",
      width: 125.88,
    },
    reference: {
      config: {},
      fieldName: "reference",
      index: 32,
      key: "reference",
      name: "reference",
      type: "REFERENCE",
    },
    richText: {
      config: {},
      editable: true,
      fieldName: "richText",
      index: 21,
      key: "richText",
      name: "Rich Text",
      type: "RICH_TEXT",
      width: 371.72265625,
    },
    shortText: {
      config: {
        required: false,
        validationRegex: null,
      },
      editable: true,
      fieldName: "shortText",
      index: 4,
      key: "shortText",
      name: "Short Text",
      type: "SIMPLE_TEXT",
      width: 216,
    },
    singleSelect: {
      config: {
        freeText: true,
        options: ["Love", "Nature", "Mythology & Folklore"],
      },
      fieldName: "singleSelect",
      index: 14,
      key: "singleSelect",
      name: "single select",
      type: "SINGLE_SELECT",
      width: 150.48828125,
    },
    slider: {
      config: {},
      editable: true,
      fieldName: "slider",
      index: 16,
      key: "slider",
      name: "slider",
      type: "SLIDER",
    },
    subtable: {
      config: {
        parentLabel: ["shortText"],
      },
      fieldName: "subtable",
      index: 17,
      key: "subtable",
      name: "subtable",
      type: "SUB_TABLE",
      width: 154.809326171875,
    },
    toggle: {
      config: {
        defaultValue: {
          dynamicValueFn:
            "const dynamicValueFn : DefaultValue = async ({row,ref,db,storage,auth})=>{\n    return Math.random()<0.5;\n}",
          script: "return Math.random()<0.5;",
          type: "undefined",
        },
      },
      fieldName: "toggle",
      index: 13,
      key: "toggle",
      name: "toggle",
      type: "CHECK_BOX",
      width: 164,
    },
    url: {
      config: {},
      fieldName: "url",
      index: 20,
      key: "url",
      name: "url",
      type: "URL",
      width: 111.90234375,
    },
    "_createdBy.timestamp": {
      config: {},
      fieldName: "_createdBy.timestamp",
      index: 29,
      key: "_createdBy.timestamp",
      name: "Created At",
      type: "CREATED_AT",
    },
  },
};
